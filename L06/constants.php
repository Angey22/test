<?php

// Examples of introducing a constant into the code (Примеры введения константы в код)

// The first way (Первый способ)
define('APP_VERSION','3.0.1'); // (Объявление константы "APP_VERSION" и присвоение ей значения "3.0.1")
//define('APP_VERSION','3.0.2'); // (Попытка изменения значения константы "APP_VERSION", которая привела к возникновению ошибки типа "Warning")
//APP_VERSION = '3.0.3'; // (Попытка переопределения значения константы, которая привел к возникновению синтаксической ошибки типа "Parse error")

echo APP_VERSION,PHP_EOL; // (Вывод на экран консоли значения константы "APP_VERSION")

// Second way (Второй способ)
const POWER = '220V'; // (Объявление константы "POWER" и присвоение ей значения "220V")
//const POWER = '380V'; // (Попытка изменения значения константы "POWER", которая привела к возникновению ошибки типа "Warning")

echo POWER, PHP_EOL; // (Вывод на экран консоли значения константы "POWER")
// (После объявления константы (вместе с вводом ее значения) изменить ее невозможно любыми средствами языка PHP)


// An example of using constants for constant scalar values (Пример использования констант для постоянных скалярных значений)
const MY_COEFFICIENT = 3.1; // (Вводим константу "MY_COEFFICIENT" со сскалярным постоянным значением "3.1")
$salary = 2000; // (Вводим переменную "$salary" и присваиваем ей натуральную величину "2000")
echo $salary * MY_COEFFICIENT, PHP_EOL; // (Используем константу "MY_COEFFICIENT" для выполнения матиматической операции умножения)
echo $salary * 3.1, PHP_EOL; // (Используем отдельно прописаное число для выполнения аналогичной, выше описаной, матиматической операции умножения без константы)
// (Константы удобно использовать в алгоритмах, которые в разных участках кода обращаются к одному и тому же значению)

// (Константы используются для ввода в код каких либо литеральных значений (строки, масива, булевого значения), которые по всему коду приложения должны оставаться неизменными)

